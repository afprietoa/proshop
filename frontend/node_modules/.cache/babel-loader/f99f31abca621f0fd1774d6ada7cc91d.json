{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { updateCart } from '../utils/cartUtils';\nconst initialState = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : {\n  cartItems: [],\n  shippingAddress: {},\n  paymentMethod: 'PayPal'\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      console.log(state);\n      console.log(action);\n      const item = action.payload;\n      const existItem = state.cardItems.find(x => x._id === item._id);\n      if (existItem) {\n        state.cartItems = state.cartItems.map(x => x._id === existItem._id ? item : x);\n      } else {\n        state.cartItems = [...state.cartItems, item];\n      }\n      return updateCart(state);\n    }\n  }\n});\nexport const {\n  addToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","updateCart","initialState","localStorage","getItem","JSON","parse","cartItems","shippingAddress","paymentMethod","cartSlice","name","reducers","addToCart","state","action","console","log","item","payload","existItem","cardItems","find","x","_id","map","actions","reducer"],"sources":["C:/Users/Hp/Desktop/proshop/frontend/src/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { updateCart } from '../utils/cartUtils';\r\n\r\nconst initialState = localStorage.getItem('cart')\r\n  ? JSON.parse(localStorage.getItem('cart'))\r\n  : { cartItems: [], shippingAddress: {}, paymentMethod: 'PayPal' };\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n        addToCart: (state, action) => {\r\n            console.log(state)\r\n            console.log(action)\r\n            const item = action.payload;\r\n            const existItem = state.cardItems.find((x) => x._id === item._id);\r\n\r\n            if(existItem){\r\n                state.cartItems = state.cartItems.map((x) => x._id === existItem._id ? item : x);\r\n            }else{\r\n                state.cartItems = [...state.cartItems, item]\r\n            }\r\n\r\n            return updateCart(state);\r\n            \r\n        }\r\n    }\r\n});\r\n\r\nexport const { addToCart } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,oBAAoB;AAE/C,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAC7CC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,GACxC;EAAEG,SAAS,EAAE,EAAE;EAAEC,eAAe,EAAE,CAAC,CAAC;EAAEC,aAAa,EAAE;AAAS,CAAC;AAEnE,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,MAAM;EACZT,YAAY;EACZU,QAAQ,EAAE;IACJC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MAClBE,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB,MAAMG,IAAI,GAAGH,MAAM,CAACI,OAAO;MAC3B,MAAMC,SAAS,GAAGN,KAAK,CAACO,SAAS,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKN,IAAI,CAACM,GAAG,CAAC;MAEjE,IAAGJ,SAAS,EAAC;QACTN,KAAK,CAACP,SAAS,GAAGO,KAAK,CAACP,SAAS,CAACkB,GAAG,CAAEF,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKJ,SAAS,CAACI,GAAG,GAAGN,IAAI,GAAGK,CAAC,CAAC;MACpF,CAAC,MAAI;QACDT,KAAK,CAACP,SAAS,GAAG,CAAC,GAAGO,KAAK,CAACP,SAAS,EAAEW,IAAI,CAAC;MAChD;MAEA,OAAOjB,UAAU,CAACa,KAAK,CAAC;IAE5B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAED;AAAU,CAAC,GAAGH,SAAS,CAACgB,OAAO;AAE9C,eAAehB,SAAS,CAACiB,OAAO"},"metadata":{},"sourceType":"module"}